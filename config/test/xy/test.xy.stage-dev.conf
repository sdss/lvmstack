# $Header: https://svn.mpia.de/gulli/TwiceAsNice/branch/unstable/TwiceAsNice/basda-mocca/examples/service/xy/xyDevice.cfg 14057 2016-11-10 14:53:04Z mathar $

LOAD                                  = [NAME=XY, LIB=BasdaMoccaMpiaNDevice]                        # define the device name and the corresponding library
                                                                                                    # The Basdard application will search for name specified in SVN.NAME
                                                                                                    # in the DEV subtree in order to load the required device library. 
                                                                                                    # Therefore this device name need to be set at the property entry SVC.DEVICE 
                                                                                                    # in the service configuration file.
MOD.X.CFG.CONNECTION.ADDRESS          = tcp://192.168.3.32:4000                                     # connection address: tcp://HOST:PORT or tty:/dev/ttyS0:9600:8:no
#MOD.X.CFG.CONNECTION.ADDRESS          = tcp://192.168.156.193:4000                                 # connection address: tcp://HOST:PORT or tty:/dev/ttyS0:9600:8:no
MOD.X.CFG.CONNECTION.CARD             = 1                                                           # the used MoCon card
MOD.X.CFG.CONNECTION.MODULE           = 1                                                           # the used MoCon module
MOD.X.CFG.CONNECTION.TIMEOUT:Time     = 00:00:03.000000      +UNIT=hour                             # its the time how long the service should wait for a normal command response like ACK (this timeout is blocking the service but the MoCon sends the ACK immediately)
MOD.X.CFG.CONNECTION.EVENT_TIMEOUT:Time = 00:00:00.500000    +UNIT=hour                             # its the time how long the service should wait for a event message (Pay attention: this timeout blocks the service while it is waiting for an event which might not send immediately)
MOD.X.CFG.DATASHEET.CONFIG            = test/xy/test.xy.stage-datasheet.conf                        # enter the motor datasheet config file here either with absolute path or 
                                                                                                    # just the config file. The TwiceAsNice parser will try to locate the file.
MOD.X.CFG.DATASHEET.TRAVELRANGE:Point = [-360000, 360000]  +UNIT=steps  +LABEL=["MIN", "MAX"]     # the travel range of the module in steps

MOD.Y.CFG.CONNECTION.ADDRESS          = tcp://192.168.3.32:4000                                     # connection address: tcp://HOST:PORT or tty:/dev/ttyS0:9600:8:no
#MOD.Y.CFG.CONNECTION.ADDRESS          = tcp://192.168.156.193:4000                                 # connection address: tcp://HOST:PORT or tty:/dev/ttyS0:9600:8:no
MOD.Y.CFG.CONNECTION.CARD             = 1                                                           # the used MoCon card
MOD.Y.CFG.CONNECTION.MODULE           = 2                                                           # the used MoCon module
MOD.Y.CFG.CONNECTION.TIMEOUT:Time     = 00:00:03.00000      +UNIT=hour                             # its the time how long the service should wait for a normal command response like ACK (this timeout is blocking the service but the MoCon sends the ACK immediately)
MOD.Y.CFG.CONNECTION.EVENT_TIMEOUT:Time = 00:00:00.500000    +UNIT=hour                             # its the time how long the service should wait for a event message (Pay attention: this timeout blocks the service while it is waiting for an event which might not send immediately)
MOD.Y.CFG.DATASHEET.CONFIG            = test/xy/test.xy.stage-datasheet.conf                        # enter the motor datasheet config file here either with absolute path or 
                                                                                                    # just the config file. The TwiceAsNice parser will try to locate the file.
MOD.Y.CFG.DATASHEET.TRAVELRANGE:Point = [-180000, 180000]  +UNIT=steps  +LABEL=["MIN", "MAX"]     # the travel range of the module in steps

CFG.POSITION.AUTOUPDATE:Int          = 0                                                            # device configuration parameter to define which position value should be periodically updated
                                                                                                    # default: 0 MoCon internal software Encoder
                                                                                                    #          1 incremental Encoder
                                                                                                    #          2 absolute Encoder
                                                                                                    #          3 MoCon internal software Encoder + incremental Encoder
                                                                                                    #          4 MoCon internal software Encoder + absolute Encoder
                                                                                                    #          5 incremental Encoder + absolute Encoder
                                                                                                    #          6 MoCon internal software Encoder + incremental Encoder + absolute Encoder
CFG.POSITION.REPORT:Int              = 0                                                            # device configuration parameter to define which position value should be returned by 
                                                                                                    # getPosition or displayed in the GUI
                                                                                                    # default: 0 MoCon internal software Encoder
                                                                                                    #          1 incremental Encoder
                                                                                                    #          2 absolute Encoder
CFG.POSITION.UNIT                    = STEP                                                         # device configuration parameter to define in which unit the position value should be returned.

                                                                                                    # device configuration parameter
CFG.NAMED_POS.ABS.0:Point            = [201.696,-47.479]        +LABEL=["X", "Y"] +NAME="Position 0"    # Depending on how many named position you like to have
CFG.NAMED_POS.ABS.1:Point            = [0,0]        +LABEL=["X", "Y"] +NAME="Position 1"    # add here the properties with the positions values and the labels.
CFG.NAMED_POS.ABS.2:Point            = [0,0]        +LABEL=["X", "Y"] +NAME="Position 2"    # The labels are used to display them in the GUI.
CFG.NAMED_POS.ABS.3:Point            = [0,0]        +LABEL=["X", "Y"] +NAME="Position 3"    # The position values are the absolute target positions
#CFG.NAMED_POS.ABS.4:Point            = [-3020,-3020]        +LABEL=["X", "Y"] +NAME="Position 10"   # of the motor in steps.
#CFG.NAMED_POS.ABS.5:Point            = [-3030,-3030]        +LABEL=["X", "Y"] +NAME="Position 11"   # The property of the named position needs to be numbered serially.

CFG.NAMED_POS.REL.0:Point            = [10,1]              +LABEL=["X", "Y"] +NAME="Rel. 0"        # This is the named position for relative movements.
CFG.NAMED_POS.REL.1:Point            = [10,10]            +LABEL=["X", "Y"] +NAME="Rel. 1"        # It can be used in engineering mode in order to move the motor 
CFG.NAMED_POS.REL.2:Point            = [20,20]            +LABEL=["X", "Y"] +NAME="Rel. 2"        # to a relative position several times 
CFG.NAMED_POS.REL.3:Point            = [50,50]            +LABEL=["X", "Y"] +NAME="Rel. 3" 
CFG.NAMED_POS.REL.4:Point            = [100,100]          +LABEL=["X", "Y"] +NAME="Rel. 4" 
CFG.NAMED_POS.REL.5:Point            = [1000,1000]          +LABEL=["X", "Y"] +NAME="Rel. 4" 
                                                                                                # without to edit the target position permanently.
                                                                    
                                                                                                     # It follows the definition of the coordination transformation 
                                                                                                     # from the focal plane in the motor coordinate system.
                                                                                                     # It is also used to convert to different units.
CFG.TRANS.STEPS:WMatrix              = [[1, 0], [0, 1], [0, 0]]          +LABEL=["Scale X", "Shear X", "Shear Y", "Scale Y", "Offest X", "Offset Y"] +PREC=0          # m11, m12, m21, m22, dx, dy - scale X, shear X, shear Y, scale Y, offset x, offset Y
CFG.TRANS.DEG:WMatrix                 = [[0.001, 0], [0, 0.001], [0, 0]]        +LABEL=["Scale X", "Shear X", "Shear Y", "Scale Y", "Offest X", "Offset Y"] +PREC=2             # m11, m12, m21, m22, dx, dy - scale X, shear X, shear Y, scale Y, offset x, offset Y

